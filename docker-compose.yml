version: '3.8'

services:
  vibe-ensemble:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: vibe-ensemble:latest
    container_name: vibe-ensemble-server
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      - DATABASE_URL=postgresql://vibe_ensemble:${POSTGRES_PASSWORD}@postgres:5432/vibe_ensemble
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - RUST_LOG=${RUST_LOG:-info}
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
    volumes:
      - vibe_data:/app/data
      - vibe_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - vibe-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  postgres:
    image: postgres:15-alpine
    container_name: vibe-ensemble-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=vibe_ensemble
      - POSTGRES_USER=vibe_ensemble
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - vibe-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vibe_ensemble -d vibe_ensemble"]
      interval: 15s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/run/postgresql:noexec,nosuid,size=100m

  redis:
    image: redis:7-alpine
    container_name: vibe-ensemble-redis
    restart: unless-stopped
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data:/data
    networks:
      - vibe-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 15s
      timeout: 3s
      retries: 5
    security_opt:
      - no-new-privileges:true

  nginx:
    image: nginx:alpine
    container_name: vibe-ensemble-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./deployment/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - vibe-ensemble
    networks:
      - vibe-network
    security_opt:
      - no-new-privileges:true

  prometheus:
    image: prom/prometheus:latest
    container_name: vibe-ensemble-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - vibe-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    security_opt:
      - no-new-privileges:true

  grafana:
    image: grafana/grafana:latest
    container_name: vibe-ensemble-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployment/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./deployment/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - vibe-network
    depends_on:
      - prometheus
    security_opt:
      - no-new-privileges:true

volumes:
  vibe_data:
    driver: local
  vibe_logs:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  vibe-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24