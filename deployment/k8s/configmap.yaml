apiVersion: v1
kind: ConfigMap
metadata:
  name: vibe-ensemble-config
  namespace: vibe-ensemble
  labels:
    app.kubernetes.io/name: vibe-ensemble
    app.kubernetes.io/component: config
data:
  config.toml: |
    [server]
    host = "0.0.0.0"
    port = 8080
    max_connections = 1000
    request_timeout_seconds = 30
    shutdown_timeout_seconds = 30

    [database]
    max_connections = 20
    connection_timeout_seconds = 5
    idle_timeout_seconds = 300
    min_connections = 5

    [mcp]
    transport = "websocket"
    timeout_seconds = 30
    max_message_size = 1048576
    heartbeat_interval_seconds = 30

    [security]
    jwt_expiry_hours = 24
    password_min_length = 8
    rate_limit_requests_per_hour = 5000
    cors_max_age_seconds = 3600

    [logging]
    level = "info"
    format = "json"
    target = "stdout"

    [metrics]
    enabled = true
    port = 9090
    path = "/metrics"
    collect_interval_seconds = 15

    [features]
    api_docs = false
    health_endpoint = true
    websocket_enabled = true
    monitoring_enabled = true

    [cache]
    enabled = true
    default_ttl_seconds = 300
    max_size = 10000

  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "rules/*.yml"

    scrape_configs:
      - job_name: 'vibe-ensemble'
        static_configs:
          - targets: ['vibe-ensemble-service:9090']
        metrics_path: /metrics
        scrape_interval: 15s

      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  nginx.conf: |
    upstream backend {
        least_conn;
        server vibe-ensemble-service:8080 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name _;

        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Security headers
        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header Referrer-Policy strict-origin-when-cross-origin always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
        }

        location /api/auth {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Stricter rate limiting for auth endpoints
            limit_req zone=auth burst=10 nodelay;
        }

        location /api/health {
            proxy_pass http://backend;
            access_log off;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        location /metrics {
            proxy_pass http://backend;
            # Restrict access to metrics endpoint
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }