apiVersion: v1
kind: Secret
metadata:
  name: vibe-ensemble-secrets
  namespace: vibe-ensemble
  labels:
    app.kubernetes.io/name: vibe-ensemble
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # These values must be base64 encoded
  # Use: echo -n "your-secret" | base64
  jwt-secret: ""  # Generate with: openssl rand -base64 32 | base64
  encryption-key: ""  # Generate with: openssl rand -base64 32 | base64
  database-url: ""  # Format: postgresql://user:pass@host:5432/dbname | base64
  postgres-password: ""  # Generate with: openssl rand -base64 16 | base64
  redis-password: ""  # Generate with: openssl rand -base64 16 | base64
  grafana-admin-password: ""  # Generate with: openssl rand -base64 16 | base64

---
apiVersion: v1
kind: Secret
metadata:
  name: vibe-ensemble-tls
  namespace: vibe-ensemble
  labels:
    app.kubernetes.io/name: vibe-ensemble
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # TLS certificate and key for HTTPS
  tls.crt: ""  # Base64 encoded certificate
  tls.key: ""  # Base64 encoded private key

---
# Example secret generation script (not applied to cluster)
# Save as generate-secrets.sh and run before deployment
apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-generator-script
  namespace: vibe-ensemble
  labels:
    app.kubernetes.io/name: vibe-ensemble
    app.kubernetes.io/component: tools
data:
  generate-secrets.sh: |
    #!/bin/bash
    set -e
    
    echo "Generating secrets for Vibe Ensemble deployment..."
    
    # Generate JWT secret
    JWT_SECRET=$(openssl rand -base64 32)
    JWT_SECRET_B64=$(echo -n "$JWT_SECRET" | base64)
    
    # Generate encryption key
    ENCRYPTION_KEY=$(openssl rand -base64 32)
    ENCRYPTION_KEY_B64=$(echo -n "$ENCRYPTION_KEY" | base64)
    
    # Generate database password
    POSTGRES_PASSWORD=$(openssl rand -base64 16)
    POSTGRES_PASSWORD_B64=$(echo -n "$POSTGRES_PASSWORD" | base64)
    
    # Generate Redis password
    REDIS_PASSWORD=$(openssl rand -base64 16)
    REDIS_PASSWORD_B64=$(echo -n "$REDIS_PASSWORD" | base64)
    
    # Generate Grafana admin password
    GRAFANA_PASSWORD=$(openssl rand -base64 16)
    GRAFANA_PASSWORD_B64=$(echo -n "$GRAFANA_PASSWORD" | base64)
    
    # Generate database URL
    DATABASE_URL="postgresql://vibe_ensemble:${POSTGRES_PASSWORD}@postgres-service:5432/vibe_ensemble"
    DATABASE_URL_B64=$(echo -n "$DATABASE_URL" | base64)
    
    # Create secrets manifest
    cat > secrets-generated.yaml << EOF
    apiVersion: v1
    kind: Secret
    metadata:
      name: vibe-ensemble-secrets
      namespace: vibe-ensemble
      labels:
        app.kubernetes.io/name: vibe-ensemble
        app.kubernetes.io/component: secrets
    type: Opaque
    data:
      jwt-secret: ${JWT_SECRET_B64}
      encryption-key: ${ENCRYPTION_KEY_B64}
      database-url: ${DATABASE_URL_B64}
      postgres-password: ${POSTGRES_PASSWORD_B64}
      redis-password: ${REDIS_PASSWORD_B64}
      grafana-admin-password: ${GRAFANA_PASSWORD_B64}
    EOF
    
    echo "Secrets generated in secrets-generated.yaml"
    echo "Apply with: kubectl apply -f secrets-generated.yaml"
    echo ""
    echo "IMPORTANT: Store these values securely:"
    echo "JWT_SECRET: ${JWT_SECRET}"
    echo "ENCRYPTION_KEY: ${ENCRYPTION_KEY}"
    echo "POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}"
    echo "REDIS_PASSWORD: ${REDIS_PASSWORD}"
    echo "GRAFANA_PASSWORD: ${GRAFANA_PASSWORD}"