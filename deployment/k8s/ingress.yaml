apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vibe-ensemble-ingress
  namespace: vibe-ensemble
  labels:
    app.kubernetes.io/name: vibe-ensemble
    app.kubernetes.io/component: ingress
  annotations:
    # Nginx ingress controller annotations
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    
    # WebSocket support
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # Security headers
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
      add_header X-Frame-Options DENY always;
      add_header X-Content-Type-Options nosniff always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'" always;
    
    # Certificate management (cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://vibe-ensemble.example.com,https://app.vibe-ensemble.example.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/cors-max-age: "86400"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - vibe-ensemble.example.com
    - api.vibe-ensemble.example.com
    secretName: vibe-ensemble-tls-cert
  rules:
  - host: vibe-ensemble.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vibe-ensemble-service
            port:
              number: 80
  - host: api.vibe-ensemble.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: vibe-ensemble-service
            port:
              number: 80
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: vibe-ensemble-service
            port:
              number: 9090

---
# Staging environment ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vibe-ensemble-staging-ingress
  namespace: vibe-ensemble-staging
  labels:
    app.kubernetes.io/name: vibe-ensemble
    app.kubernetes.io/component: ingress
    app.kubernetes.io/environment: staging
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    
    # Basic auth for staging environment
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: staging-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Staging Environment - Authentication Required'
    
    # Rate limiting (more restrictive for staging)
    nginx.ingress.kubernetes.io/rate-limit: "50"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    cert-manager.io/acme-challenge-type: "http01"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - staging.vibe-ensemble.example.com
    secretName: vibe-ensemble-staging-tls-cert
  rules:
  - host: staging.vibe-ensemble.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vibe-ensemble-service
            port:
              number: 80

---
# Admin ingress with additional security
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vibe-ensemble-admin-ingress
  namespace: vibe-ensemble
  labels:
    app.kubernetes.io/name: vibe-ensemble
    app.kubernetes.io/component: admin-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Restrict access to admin endpoints
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    
    # Additional authentication
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: admin-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Admin Access - Authentication Required'
    
    # Stricter rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "20"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - admin.vibe-ensemble.example.com
    secretName: vibe-ensemble-admin-tls-cert
  rules:
  - host: admin.vibe-ensemble.example.com
    http:
      paths:
      - path: /api/admin
        pathType: Prefix
        backend:
          service:
            name: vibe-ensemble-service
            port:
              number: 80
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: vibe-ensemble-service
            port:
              number: 9090