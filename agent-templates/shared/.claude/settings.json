{
  "mcp": {
    "servers": {
      "vibe-ensemble": {
        "command": "vibe-ensemble-mcp",
        "transport": {
          "type": "websocket",
          "url": "${VIBE_ENSEMBLE_MCP_SERVER}"
        },
        "args": [],
        "env": {
          "WORKSPACE_ID": "${WORKSPACE_ID}",
          "WORKSPACE_NAME": "${WORKSPACE_NAME}",
          "TEMPLATE_NAME": "${TEMPLATE_NAME}",
          "AGENT_ID": "${AGENT_ID}",
          "VIBE_ENSEMBLE_LOG_LEVEL": "${VIBE_ENSEMBLE_LOG_LEVEL}"
        }
      }
    }
  },
  "rules": [
    {
      "type": "allow_all_commands"
    },
    {
      "type": "deny_command",
      "pattern": "sudo"
    },
    {
      "type": "deny_command",
      "pattern": "su"
    },
    {
      "type": "deny_command",
      "pattern": "rm -rf /"
    },
    {
      "type": "deny_command",
      "pattern": "rm -rf /*"
    },
    {
      "type": "deny_command",
      "pattern": "mkfs*"
    },
    {
      "type": "deny_command",
      "pattern": "fdisk"
    },
    {
      "type": "deny_command",
      "pattern": "dd if="
    },
    {
      "type": "deny_command",
      "pattern": "shutdown"
    },
    {
      "type": "deny_command",
      "pattern": "reboot"
    },
    {
      "type": "deny_command",
      "pattern": "halt"
    },
    {
      "type": "deny_command",
      "pattern": "init 0"
    },
    {
      "type": "deny_command",
      "pattern": "init 6"
    },
    {
      "type": "deny_command",
      "pattern": "systemctl poweroff"
    },
    {
      "type": "deny_command",
      "pattern": "systemctl reboot"
    },
    {
      "type": "deny_command",
      "pattern": "poweroff"
    }
  ],
  "bash": {
    "allow_unrestricted_bash": true,
    "restricted_commands": [
      "sudo",
      "su",
      "rm -rf /",
      "rm -rf /*",
      "mkfs*",
      "fdisk",
      "dd if=",
      "shutdown",
      "reboot",
      "halt",
      "init",
      "systemctl poweroff",
      "systemctl reboot",
      "poweroff"
    ]
  },
  "editor": {
    "allow_edits": true,
    "deny_system_files": true,
    "allowed_extensions": [
      ".md",
      ".txt",
      ".json",
      ".yaml",
      ".yml",
      ".toml",
      ".rs",
      ".py",
      ".js",
      ".ts",
      ".jsx",
      ".tsx",
      ".html",
      ".css",
      ".scss",
      ".less",
      ".xml",
      ".svg",
      ".sh",
      ".bash",
      ".zsh",
      ".fish",
      ".ps1",
      ".dockerfile",
      ".dockerignore",
      ".gitignore",
      ".gitattributes",
      ".env",
      ".env.example",
      "Cargo.toml",
      "Cargo.lock",
      "package.json",
      "package-lock.json",
      "yarn.lock",
      "pnpm-lock.yaml",
      "requirements.txt",
      "pyproject.toml",
      "setup.py",
      "tsconfig.json",
      "webpack.config.js",
      "vite.config.js",
      "rollup.config.js",
      "jest.config.js",
      ".prettierrc",
      ".eslintrc*",
      "README*",
      "CHANGELOG*",
      "LICENSE*",
      "Makefile",
      "makefile",
      "CMakeLists.txt"
    ]
  },
  "computer_use": {
    "enabled": false
  },
  "web_search": {
    "enabled": true,
    "allowed_domains": [
      "github.com",
      "docs.rs",
      "crates.io",
      "stackoverflow.com",
      "developer.mozilla.org",
      "doc.rust-lang.org",
      "rust-lang.github.io",
      "tokio.rs",
      "serde.rs",
      "actix.rs",
      "npmjs.com",
      "pypi.org",
      "readthedocs.io",
      "wikipedia.org",
      "medium.com",
      "dev.to"
    ]
  },
  "file_operations": {
    "allow_read": true,
    "allow_write": true,
    "allow_create": true,
    "allow_delete": true,
    "workspace_boundary": true,
    "deny_system_paths": [
      "/etc",
      "/usr",
      "/bin",
      "/sbin",
      "/lib",
      "/lib64",
      "/boot",
      "/dev",
      "/proc",
      "/sys",
      "/var/log",
      "/var/run",
      "/var/lib",
      "/opt",
      "/root"
    ]
  },
  "networking": {
    "allow_outbound": true,
    "allowed_protocols": ["http", "https", "ws", "wss"],
    "allowed_ports": [80, 443, 8080, 8443, 3000, 5000, 8000, 9000],
    "deny_local_network": false
  },
  "logging": {
    "level": "${VIBE_ENSEMBLE_LOG_LEVEL}",
    "coordination_events": true,
    "mcp_events": true,
    "security_events": true
  }
}
