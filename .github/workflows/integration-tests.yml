name: Integration Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - '.github/workflows/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'vibe-ensemble-mcp/**'
      - 'vibe-ensemble-core/**'
      - 'vibe-ensemble-storage/**'
      - 'vibe-ensemble-prompts/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '.github/workflows/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'vibe-ensemble-mcp/**'
      - 'vibe-ensemble-core/**'
      - 'vibe-ensemble-storage/**'
      - 'vibe-ensemble-prompts/**'
  schedule:
    # Run integration tests nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: sqlite:./integration_test.db
  SQLX_OFFLINE: true
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

concurrency:
  group: integration-tests-${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  coordinator-ticket-management:
    name: Coordinator Ticket Management
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.82.0
        with:
          toolchain: "1.82.0"

      - name: Cache cargo (compiler-aware)
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: integration-tests

      - name: Test coordinator ticket management functionality
        run: |
          # Test coordinator creating and assigning tickets to specialized workers
          cargo test --test coordinator_worker_integration test_coordinator_creates_assigns_tickets --verbose -- --nocapture
        env:
          RUST_BACKTRACE: 1
          DATABASE_URL: sqlite:./coordinator_test.db

      - name: Upload coordinator DB (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coordinator-sqlite-db
          path: ./coordinator_test.db
          retention-days: 7

  workspace-isolation:
    name: Multi-Worker Workspace Isolation
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.82.0
        with:
          toolchain: "1.82.0"

      - name: Set up git for workspace tests
        run: |
          git config --global user.name "Workspace Tests"
          git config --global user.email "workspace-tests@vibe-ensemble.local"
          git config --global init.defaultBranch main
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Cache cargo (compiler-aware)
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: integration-tests

      - name: Test workspace isolation between multiple workers
        run: |
          # Test multiple workers working on same project in isolated workspaces
          cargo test --test coordinator_worker_integration test_multi_worker_isolated_workspaces --verbose -- --nocapture
        env:
          RUST_BACKTRACE: 1
          DATABASE_URL: sqlite:./workspace_test.db

      - name: Upload workspace DB (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: workspace-sqlite-db
          path: ./workspace_test.db
          retention-days: 7

  error-recovery:
    name: Error Recovery and Task Reassignment
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.82.0
        with:
          toolchain: "1.82.0"

      - name: Cache cargo (compiler-aware)
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: integration-tests

      - name: Test error recovery and task reassignment workflows
        run: |
          # Test failure scenarios, task reassignment, and recovery procedures
          cargo test --test coordinator_worker_integration test_error_recovery_workflow --verbose -- --nocapture
        env:
          RUST_BACKTRACE: 1
          DATABASE_URL: sqlite:./recovery_test.db

      - name: Upload recovery DB (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: recovery-sqlite-db
          path: ./recovery_test.db
          retention-days: 7

  complete-integration-suite:
    name: Complete Integration Test Suite
    needs: [coordinator-ticket-management, workspace-isolation, error-recovery]
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.82.0
        with:
          toolchain: "1.82.0"
          components: rustfmt, clippy

      - name: Cache cargo (compiler-aware)
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: integration-tests

      - name: Build integration tests
        run: |
          cargo build --workspace --tests

      - name: Run all integration tests together
        run: |
          # Run all three integration tests to ensure they work together
          cargo test --test coordinator_worker_integration --verbose -- --nocapture
        env:
          RUST_BACKTRACE: 1
          DATABASE_URL: sqlite:./complete_integration_test.db

      - name: Upload complete-suite DB (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: complete-suite-sqlite-db
          path: ./complete_integration_test.db
          retention-days: 7

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Lint integration tests
        run: |
          cargo clippy --tests --all-features --package vibe-ensemble-mcp -- -D warnings
