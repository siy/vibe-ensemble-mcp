name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: sqlite:./test.db
  RUSTFLAGS: "-D warnings"
  SQLX_OFFLINE: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "stable"
          components: rustfmt, clippy
      
      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Check code formatting
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      
      - name: Run security audit
        run: |
          cargo install cargo-audit --locked --force
          cargo audit
      
      - name: Run tests
        run: |
          # Run unit and integration tests
          cargo test --workspace --verbose
          
          # Build the server for link validation testing
          cargo build --release --bin vibe-ensemble
          
          # Start the server in background for link validation
          ./target/release/vibe-ensemble --web-only --web-port 8081 &
          SERVER_PID=$!
          
          # Give server time to start
          sleep 10
          
          # Run link validation script as part of testing
          ./scripts/test-links.sh http://127.0.0.1:8081
          
          # Clean up
          kill $SERVER_PID || true
        env:
          RUST_BACKTRACE: 1
          DATABASE_URL: sqlite:./ci_test.db

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "stable"
      
      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            target/
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Build release binaries
        run: cargo build --release --workspace
      
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/vibe-ensemble-*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}