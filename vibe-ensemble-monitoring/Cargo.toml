[package]
name = "vibe-ensemble-monitoring"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
description = "Monitoring and observability components for Vibe Ensemble MCP"
rust-version.workspace = true

[dependencies]
vibe-ensemble-core = { path = "../vibe-ensemble-core", optional = true }
vibe-ensemble-storage = { path = "../vibe-ensemble-storage", optional = true }

# Core async and serialization
tokio = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
uuid = { workspace = true }
chrono = { workspace = true }

# Observability and monitoring
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter", "json", "registry", "fmt"] }
tracing-opentelemetry = "0.23"
opentelemetry = { version = "0.22", features = ["trace"] }
opentelemetry_sdk = { version = "0.22", features = ["trace", "rt-tokio"] }
opentelemetry-jaeger = { version = "0.21", features = ["rt-tokio"] }
metrics = "0.23"
metrics-exporter-prometheus = "0.15"
metrics-util = "0.17"

# Web framework for metrics endpoints
axum = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true, features = ["cors", "trace"] }

# Error handling
anyhow = { workspace = true }
thiserror = { workspace = true }

# System metrics
sysinfo = "0.30"

[target.'cfg(target_os = "linux")'.dependencies]
procfs = { version = "0.16", optional = true }

# Async traits and utilities
async-trait = { workspace = true }
futures = { workspace = true }

[features]
default = ["system-metrics"]
system-metrics = []
storage = ["vibe-ensemble-core", "vibe-ensemble-storage"]

[dev-dependencies]
tempfile = "3.8"